#!/bin/bash

#Variables
SSLLOC=/opt/ssl
SCRIPTLOC=/home/pa-krieger@ia462.advossec.com/IA-462/Module-Five
RTPASS=P@ssw0rd
INT1PASS=P@ssw0rd
WEBLOC=/tmp
SSLNAME=IA462
WEBNAME=webca
EDITORPERF=vim
BASEDIR=/tmp
DNSNAME=ia462.advossec.com
#ENDDATE Format YYMMDDHHMMSSZ
ROOTENDDATE=20270601000000Z
INTERENDDATE=20260601000000Z
WEBCERTDAYS=375

clear
echo "Welcome to the SSL generation script."
echo "Please ensure all variables are properly filled out before selecting an option"
echo "Select 1 edit this script and create varaibles"
echo "Select 2 to Generate a new root CA in directory " $SSLLOC/$SSLNAME/  
echo "Select 3 to generate a new intermediate CA"
echo "Select 4 to generate a SSL web certificate from the webca intermediate (Autogenerated)"
echo "Select 5 to generate a CRL for Root and webca certificate authorities"
echo "Select 6 to sign an external intermedaite request"
echo ""


echo "Press any other key to exit"
read NUMSELECT

case $NUMSELECT in
    1) echo "Editing script..."
        sleep 2
        $EDITORPERF $SCRIPTLOC/ssl-script.sh    ;;

    2) echo "Generating New Root CA named " $SSLNAME
        sleep 5
        echo "Creating Directories & setting permissions"
        mkdir -p $SSLLOC/$SSLNAME/certs $SSLLOC/$SSLNAME/crl $SSLLOC/$SSLNAME/newcerts $SSLLOC/$SSLNAME/private
        chmod 700 $SSLLOC/$SSLNAME/private
        echo "Creating database files"
        sleep 2
        touch $SSLLOC/$SSLNAME/index.txt
        echo 1000 > $SSLLOC/$SSLNAME/serial
        echo 1000 > $SSLLOC/$SSLNAME/crlnumber 
        echo "Generating openssl.cnf configuration"
        sleep 2
        sed s/SSLNAME/$SSLNAME/g $SCRIPTLOC/data/openssl.cnf >$SSLLOC/$SSLNAME/openssl.cnf
        echo "Editing openssl.cnf configuration file"
        sleep 2
        $EDITORPERF $SSLLOC/$SSLNAME/openssl.cnf
        echo "Creating RSA Key for Root certificate"
        openssl genrsa -aes256 -out $SSLLOC/$SSLNAME/private/$SSLNAME.key -passout pass:$RTPASS 4096
        echo "Generating Root Certificate Request"
        sleep 2
        openssl req -config $SSLLOC/$SSLNAME/openssl.cnf -key $SSLLOC/$SSLNAME/private/$SSLNAME.key -new -sha256 -out $SSLLOC/$SSLNAME/certs/$SSLNAME.req -batch -passin pass:$RTPASS 
        echo "Signing root Certificate with stored password"
        sleep 2
        openssl ca -config $SSLLOC/$SSLNAME/openssl.cnf -keyfile $SSLLOC/$SSLNAME/private/$SSLNAME.key -batch -extensions v3_ca -selfsign -notext -md sha256 -in $SSLLOC/$SSLNAME/certs/$SSLNAME.req -out $SSLLOC/$SSLNAME/certs/$SSLNAME.cer -enddate $ROOTENDDATE -passin pass:$RTPASS
        echo "Setting key permissions"
        sleep 2
        chmod 400 $SSLLOC/$SSLNAME/private/$SSLNAME.key
        echo "Securing Root certificate"
        sleep 2
        chmod 444 $SSLLOC/$SSLNAME/certs/$SSLNAME.cer
        echo "Showing certificate output"
        sleep 2
        openssl x509 -noout -text -in $SSLLOC/$SSLNAME/certs/$SSLNAME.cer
        cp $SSLLOC/$SSLNAME/certs/$SSLNAME.cer /tmp/
        
        echo "Generating webca intermediate certificat (no prompts)"
        INTNAME=webca
        mkdir $SSLLOC/$SSLNAME/$INTNAME/certs $SSLLOC/$SSLNAME/$INTNAME/crl $SSLLOC/$SSLNAME/$INTNAME/csr $SSLLOC/$SSLNAME/$INTNAME/newcerts $SSLLOC/$SSLNAME/$INTNAME/private -p
        chmod 700 $SSLLOC/$SSLNAME/$INTNAME/private
        touch $SSLLOC/$SSLNAME/$INTNAME/index.txt
        echo 1000 > $SSLLOC/$SSLNAME/$INTNAME/serial
        echo 1000 > $SSLLOC/$SSLNAME/$INTNAME/crlnumber
        sed -e s/SSLNAME/$SSLNAME/ -e s/INTNAME/$INTNAME/ $SCRIPTLOC/data/openssl-intermediate.cnf > $SSLLOC/$SSLNAME/$INTNAME/openssl.cnf
        #$EDITORPERF $SSLLOC/$SSLNAME/$INTNAME/openssl.cnf
        openssl genrsa -aes256  -out $SSLLOC/$SSLNAME/$INTNAME/private/$INTNAME.key -passout pass:$INT1PASS 4096 
        #More secure no password option
        #openssl genrsa -aes256  -out $SSLLOC/$SSLNAME/$INTNAME/private/$INTNAME.key 4096 
        chmod 400 $SSLLOC/$SSLNAME/$INTNAME/private/$INTNAME.key
        echo "Generating Intermediate Certificate request with stored password"
        openssl req -config $SSLLOC/$SSLNAME/$INTNAME/openssl.cnf -new -sha256 -key $SSLLOC/$SSLNAME/$INTNAME/private/$INTNAME.key -out $SSLLOC/$SSLNAME/$INTNAME/csr/$INTNAME.csr -batch -passin pass:$INT1PASS
        #More secure no password option
        #openssl req -config $SSLLOC/$SSLNAME/$INTNAME/openssl.cnf -new -sha256 -key $SSLLOC/$SSLNAME/$INTNAME/private/$INTNAME.key -out $SSLLOC/$SSLNAME/$INTNAME/csr/$INTNAME.csr
        openssl ca -config $SSLLOC/$SSLNAME/openssl.cnf -extensions v3_intermediate_ca -enddate $INTERENDDATE -notext -md sha256 -in $SSLLOC/$SSLNAME/$INTNAME/csr/$INTNAME.csr -out $SSLLOC/$SSLNAME/$INTNAME/certs/$INTNAME.cer -batch -passin pass:$RTPASS
        #More secure no password option
        #openssl ca -config $SSLLOC/$SSLNAME/openssl.cnf -extensions v3_intermediate_ca -enddate $INTERENDDATE -notext -md sha256 -in $SSLLOC/$SSLNAME/$INTNAME/csr/$INTNAME.csr -out $SSLLOC/$SSLNAME/$INTNAME/certs/$INTNAME.cer
        chmod 444 $SSLLOC/$SSLNAME/$INTNAME/certs/$INTNAME.cer
        cp $SSLLOC/$SSLNAME/$INTNAME/certs/$INTNAME.cer /tmp/
        ;;
        
    3) echo "Generating Intermediate Certificate signed by " $ROOTNAME "Certificate"
        echo "Enter Intermediate Certificate Name Directory"
        read INTNAME
        sleep 2
        echo "Creating Directories & setting permissions"
        sleep 2
        mkdir $SSLLOC/$SSLNAME/$INTNAME/certs $SSLLOC/$SSLNAME/$INTNAME/crl $SSLLOC/$SSLNAME/$INTNAME/csr $SSLLOC/$SSLNAME/$INTNAME/newcerts $SSLLOC/$SSLNAME/$INTNAME/private -p
        chmod 700 $SSLLOC/$SSLNAME/$INTNAME/private
        echo "Creating database files"
        sleep 2
        touch $SSLLOC/$SSLNAME/$INTNAME/index.txt
        echo 1000 > $SSLLOC/$SSLNAME/$INTNAME/serial
        echo 1000 > $SSLLOC/$SSLNAME/$INTNAME/crlnumber
        sleep 2
        echo "Generating openssl.cnf configuration"
        sleep 2
        sed -e s/SSLNAME/$SSLNAME/ -e s/INTNAME/$INTNAME/ $SCRIPTLOC/data/openssl-intermediate.cnf > $SSLLOC/$SSLNAME/$INTNAME/openssl.cnf
        echo "Editing openssl.cnf configuration file"
        sleep 2
        $EDITORPERF $SSLLOC/$SSLNAME/$INTNAME/openssl.cnf
        echo "Generating/Securing RSA Key with stored password"
        sleep 2
        openssl genrsa -aes256  -out $SSLLOC/$SSLNAME/$INTNAME/private/$INTNAME.key -passout pass:$INT1PASS 4096
        #More secure no password option
        #openssl genrsa -aes256  -out $SSLLOC/$SSLNAME/$INTNAME/private/$INTNAME.key 4096 
        echo "Setting key permissions"
        sleep 2
        chmod 400 $SSLLOC/$SSLNAME/$INTNAME/private/$INTNAME.key
        echo "Generating Intermediate Certificate request with stored password"
        sleep 2
        openssl req -config $SSLLOC/$SSLNAME/$INTNAME/openssl.cnf -new -sha256 -key $SSLLOC/$SSLNAME/$INTNAME/private/$INTNAME.key -out $SSLLOC/$SSLNAME/$INTNAME/csr/$INTNAME.csr -passin pass:$INT1PASS
        #More secure no password option
        #openssl req -config $SSLLOC/$SSLNAME/$INTNAME/openssl.cnf -new -sha256 -key $SSLLOC/$SSLNAME/$INTNAME/private/$INTNAME.key -out $SSLLOC/$SSLNAME/$INTNAME/csr/$INTNAME.csr
        echo "Signing Intermediate Certificate using root certficate with stored password"
        sleep 2
        openssl ca -config $SSLLOC/$SSLNAME/openssl.cnf -batch -extensions v3_intermediate_ca -enddate $INTERENDDATE -notext -md sha256 -in $SSLLOC/$SSLNAME/$INTNAME/csr/$INTNAME.csr -out $SSLLOC/$SSLNAME/$INTNAME/certs/$INTNAME.cer -passin pass:$RTPASS
        #More secure no password option
        #openssl ca -config $SSLLOC/$SSLNAME/openssl.cnf -extensions v3_intermediate_ca -enddate $INTERENDDATE -notext -md sha256 -in $SSLLOC/$SSLNAME/$INTNAME/csr/$INTNAME.csr -out $SSLLOC/$SSLNAME/$INTNAME/certs/$INTNAME.cer
        echo "Securing intermediate certificate"
        sleep 2
        chmod 444 $SSLLOC/$SSLNAME/$INTNAME/certs/$INTNAME.cer
        echo "Showing certificate output"
        sleep 2
        openssl x509 -noout -text -in $SSLLOC/$SSLNAME/$INTNAME/certs/$INTNAME.cer 
        cp $SSLLOC/$SSLNAME/$INTNAME/certs/$INTNAME.cer /tmp/
        ;;

    4) echo "Generating Web Server certificate from webca"
        echo "Enter Hostname for Certificate"
        read HOSTNAME
        echo "Generating Certificate request configuration file"
        sleep 2
        echo "[ req ]"> $BASEDIR/$HOSTNAME.cnf
        echo "default_bits       = 2048">> $BASEDIR/$HOSTNAME.cnf
    	echo "distinguished_name = req_distinguished_name">> $BASEDIR/$HOSTNAME.cnf
    	echo "req_extensions     = req_ext">> $BASEDIR/$HOSTNAME.cnf
        echo "prompt = no" >> $BASEDIR/$HOSTNAME.cnf
	    echo "">> $BASEDIR/$HOSTNAME.cnf
    	echo "[ req_distinguished_name ]">> $BASEDIR/$HOSTNAME.cnf
	    echo "countryName               = US">> $BASEDIR/$HOSTNAME.cnf
	    echo "stateOrProvinceName       = Michigan">> $BASEDIR/$HOSTNAME.cnf
    	echo "localityName              = Ypsilanti">> $BASEDIR/$HOSTNAME.cnf
        echo "0.organizationName        = Eastern Michigan University, SISAC Department">> $BASEDIR/$HOSTNAME.cnf
	    echo "organizationalUnitName    = IA462">> $BASEDIR/$HOSTNAME.cnf
	    echo "commonName                = $HOSTNAME.$DNSNAME">> $BASEDIR/$HOSTNAME.cnf
	    echo "emailAddress              = ckriege2@emich.edu">> $BASEDIR/$HOSTNAME.cnf
	    echo "">> $BASEDIR/$HOSTNAME.cnf
	    echo "[ req_ext ]">> $BASEDIR/$HOSTNAME.cnf
	    echo "subjectAltName = @alt_names">> $BASEDIR/$HOSTNAME.cnf
	    echo "">> $BASEDIR/$HOSTNAME.cnf
    	echo "[alt_names]">> $BASEDIR/$HOSTNAME.cnf
    	echo "DNS.1   = $HOSTNAME.$DNSNAME">> $BASEDIR/$HOSTNAME.cnf
        echo "#DNS.2   =">> $BASEDIR/$HOSTNAME.cnf
    	echo "#IP.1 =">> $BASEDIR/$HOSTNAME.cnf
        echo "Editing certificate request"
        sleep 2
        $EDITORPERF $BASEDIR/$HOSTNAME.cnf
        echo "Generating certificate request"
        sleep 2
        openssl req -config $BASEDIR/$HOSTNAME.cnf -nodes -newkey rsa:2048 -keyout $BASEDIR/$HOSTNAME.key -out $BASEDIR/$HOSTNAME.csr
        echo "Signing certificate using WebCa Singing certificate"
        sleep 2
        openssl ca -config $SSLLOC/$SSLNAME/$WEBNAME/openssl.cnf -extensions server_cert -batch -days $WEBCERTDAYS -notext -md sha256 -in $BASEDIR/$HOSTNAME.csr -out $BASEDIR/$HOSTNAME.cer -passin pass:$INT1PASS ;;
    5) echo "Generating CRL (Certificate Revocation List)"
        openssl ca -config $SSLLOC/$SSLNAME/openssl.cnf  -gencrl -passin pass:$RTPASS > $WEBLOC/root.crl 
        openssl ca -config $SSLLOC/$SSLNAME/$WEBNAME/openssl.cnf -gencrl -passin pass:$INT1PASS> $WEBLOC/$SSLNAME.crl 
        ;;
    6) echo "Signing external Intermediate Request"
        echo "Select Certificate request directory"
        read INTDIR
        echo "Select certificate request to sign"
        ls $INTDIR |grep -e .req -e .csr
        read INTNAME
        echo "Input name for certificate file"
        read INTOUTFILE
        openssl ca -config $SSLLOC/$SSLNAME/openssl.cnf -batch -extensions v3_intermediate_ca -enddate $INTERENDDATE -notext -md sha256 -in $INTDIR/$INTNAME -out $INTDIR/$INTOUTFILE.cer -passin pass:$RTPASS
        ;;
    
esac
